library(nnet)
train <- read.csv("D:/practice/zs/7e2ae14e-8-dataset/dataset/train.csv")
train$CASE_SUBMITTED_DAY = as.Date(paste(train$CASE_SUBMITTED_DAY,"-",train$CASE_SUBMITTED_MONTH,"-",train$CASE_SUBMITTED_YEAR, sep=""), format = "%d-%m-%Y")
train$DECISION_DAY = as.Date(paste(train$DECISION_DAY,"-",train$DECISION_MONTH,"-",train$DECISION_YEAR, sep = ""), format = "%d-%m-%Y")

#converting wages to per year
#---------------------------------------------------------------------------
train$sequence <- 1:nrow(train) 

train_new = data.frame()
df=train[train$PW_UNIT_OF_PAY=="Week",]
df$PREVAILING_WAGE=df$PREVAILING_WAGE*52
train_new = rbind(train_new,df)
df=train[train$PW_UNIT_OF_PAY=="Hour",]
df$PREVAILING_WAGE=df$PREVAILING_WAGE*9*(365-102)
train_new = rbind(train_new,df)
df=train[train$PW_UNIT_OF_PAY=="Month",]
df$PREVAILING_WAGE=df$PREVAILING_WAGE*12
train_new = rbind(train_new,df)
df=train[train$PW_UNIT_OF_PAY=="Bi+AC0-Weekly",]
df$PREVAILING_WAGE=df$PREVAILING_WAGE*26
train_new = rbind(train_new,df)
df=train[train$PW_UNIT_OF_PAY=="Year",]
train_new = rbind(train_new,df)
train_updated = train_new[order(train_new$sequence),]

train_new = data.frame()
df=train[train$WAGE_UNIT_OF_PAY=="Week",]
df$WAGE_RATE_OF_PAY_FROM=df$WAGE_RATE_OF_PAY_FROM*52
df$WAGE_RATE_OF_PAY_TO=df$WAGE_RATE_OF_PAY_TO*52
train_new = rbind(train_new,df)
df=train[train$WAGE_UNIT_OF_PAY=="Hour",]
df$WAGE_RATE_OF_PAY_FROM=df$WAGE_RATE_OF_PAY_FROM*9*(365-102)
df$WAGE_RATE_OF_PAY_TO=df$WAGE_RATE_OF_PAY_TO*9*(365-102)
train_new = rbind(train_new,df)
df=train[train$WAGE_UNIT_OF_PAY=="Month",]
df$WAGE_RATE_OF_PAY_FROM=df$WAGE_RATE_OF_PAY_FROM*12
df$WAGE_RATE_OF_PAY_TO=df$WAGE_RATE_OF_PAY_TO*12
train_new = rbind(train_new,df)
df=train[train$WAGE_UNIT_OF_PAY=="Bi+AC0-Weekly",]
df$WAGE_RATE_OF_PAY_FROM=df$WAGE_RATE_OF_PAY_FROM*26
df$WAGE_RATE_OF_PAY_TO=df$WAGE_RATE_OF_PAY_TO*26
train_new = rbind(train_new,df)
df=train[train$WAGE_UNIT_OF_PAY=="Year",]
train_new = rbind(train_new,df)
train = train_new[order(train_new$sequence),]
train$PROCESS_TIME = as.numeric(train$DECISION_DAY - train$CASE_SUBMITTED_DAY)

v=c(-1,-2,-5,-9,-10,-13,-17,-18,-19,-20,-22,-23,-27,-29)
train = train[,v]

#--------------------------------------------------------------------------------------

train = train[complete.cases(train),]

#Add a factor a others to unnecessary data
#--------------------------------------------------------------------------------------
removeBlankLevelsInDataFrame <- function(dataframe) {
  for (i in 1:ncol(dataframe)) {
    levels <- levels(dataframe[, i])
    if (!is.null(levels) && levels[1] == "") {
      levels(dataframe[,i])[1] = "?"
    }
  }
  dataframe
}

removeBlankLevelsInVector <- function(vector) {
  levels <- levels(vector)
  if (!is.null(levels) && levels[1] == "") {
    levels(vector)[1] = "?"
  }
  vector
}

train = removeBlankLevelsInDataFrame(train)


set.seed(123)

train = train[c(-7,-14)]
train$CASE_SUBMITTED_MONTH = as.factor(as.character(train$CASE_SUBMITTED_MONTH))
train$CASE_SUBMITTED_YEAR = as.factor(as.character(train$CASE_SUBMITTED_YEAR))
train$DECISION_MONTH = as.factor(as.character(train$DECISION_MONTH))
train$DECISION_YEAR = as.factor(as.character(train$DECISION_YEAR))

train[,1] = as.numeric(train[,1])
train[,2] = as.numeric(train[,2])
train[,3] = as.numeric(train[,3])
train[,4] = as.numeric(train[,4])
train[,5] = as.numeric(train[,5])
train[,6] = as.numeric(train[,6])
train[,8] = as.numeric(train[,8])
train[,11] = as.numeric(train[,11])
train[,12] = as.numeric(train[,12])
train[,13] = as.numeric(train[,13])

dat <- data.frame(lapply(train[-13], function(x) scale(x, center = FALSE, scale = max(x, na.rm = TRUE)/100)))
dat$CASE_STATUS = train$CASE_STATUS

train_sample <- sample(414066, 400000)

dat_train = dat[train_sample,]
dat_test = dat[-train_sample,]

knn_mod<- knn(train = dat_train, test = dat_test,
                      cl = dat_train$CASE_STATUS, k = 11)
CrossTable(x = dat_train$CASE_STATUS, y = dat_test$CASE_STATUS,
           prop.chisq=FALSE)
#library(C50)
#model_decTree = C50::C5.0(train[-15], train$CASE_STATUS, trails = 1)
#------------------------------------------------------------------------------------
#build model


